package zaryogujo;

import java.util.*;

public class Maze {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();  
        int m = sc.nextInt();  
        sc.nextLine();         

        int[][] maze = new int[n][m];       
        boolean[][] visited = new boolean[n][m]; 

       
        for (int i = 0; i < n; i++) {
            String line = sc.nextLine();     
            for (int j = 0; j < m; j++) {
                maze[i][j] = line.charAt(j) - '0'; 
            }
        }

        int[] dx = {-1, 1, 0, 0};  
        int[] dy = {0, 0, -1, 1};  

        Queue<int[]> queue = new LinkedList<>();
        queue.add(new int[] {0, 0});
        visited[0][0] = true;  

        while (!queue.isEmpty()) {
            int[] now = queue.poll();
            int x = now[0];
            int y = now[1];

            for (int i = 0; i < 4; i++) {
                int nx = x + dx[i];  
                int ny = y + dy[i]; 

                if (nx < 0 || ny < 0 || nx >= n || ny >= m)
                    continue;

                if (maze[nx][ny] == 0 || visited[nx][ny])
                    continue;

                queue.add(new int[] {nx, ny});         
                visited[nx][ny] = true;                
                maze[nx][ny] = maze[x][y] + 1;          
            }
        }

        System.out.println(maze[n - 1][m - 1]);
    }
}
