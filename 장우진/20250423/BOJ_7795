import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int T = sc.nextInt(); // 테스트 케이스 개수

        for (int t = 0; t < T; t++) {
            int N = sc.nextInt(); // A 배열의 크기
            int M = sc.nextInt(); // B 배열의 크기

            int[] A = new int[N];
            int[] B = new int[M];

            // A 배열 입력
            for (int i = 0; i < N; i++) {
                A[i] = sc.nextInt();
            }

            // B 배열 입력
            for (int i = 0; i < M; i++) {
                B[i] = sc.nextInt();
            }

            Arrays.sort(B); // 이진탐색을 위한 B배열 정렬

            int count = 0;

            for (int i = 0; i < N; i++) {
                count += upperBound(B, A[i]); 
                // A[i]보다 작은 B원소의 개수를 upperBound로 찾아서 더함
            }

            System.out.println(count);
        }
    }

    // B 배열에서 num보다 작은 값의 개수를 찾는 함수
    public static int upperBound(int[] arr, int num) {
        int start = 0;
        int end = arr.length;

        while (start < end) { // 이진탐색
            int mid = (start + end) / 2;

            if (arr[mid] < num) {
                start = mid + 1;
            } else {
                end = mid;
            }
        }
        return start; 
        // 최종적으로 start가 num보다 작은 원소의 개수가 된다
    }
}
