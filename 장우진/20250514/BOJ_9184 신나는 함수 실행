public class Main {
 
    // dp[a][b][c]는 w(a, b, c)의 계산 결과를 저장
    static int[][][] dp = new int[21][21][21];
    
    public static void main(String[] args) {
        
        Scanner in = new Scanner(System.in);        
        
        while(true) {
            int a = in.nextInt();
            int b = in.nextInt();
            int c = in.nextInt();
            
            // -1 -1 -1 입력 시 종료
            if (a == -1 && b == -1 && c == -1) {
                break;
            }
            
            System.out.printf("w(%d, %d, %d) = %d\n", a, b, c, w(a, b, c));
        }
    }
    
    static int w(int a, int b, int c) { 
        
        // 메모이제이션 값이 이미 존재하면 반환
        if(inRange(a, b, c) && dp[a][b][c] != 0) {
            return dp[a][b][c];
        }
        
        // 0 이하일 경우 1 반환
        if(a <= 0 || b <= 0 || c <= 0) {
            return 1;
        }
        
        // 20 초과인 경우 w(20, 20, 20)로 통일
        if(a > 20 || b > 20 || c > 20) {
            return dp[20][20][20] = w(20, 20, 20);
        }
        
        // a < b < c 조건일 경우
        if(a < b && b < c) {
            return dp[a][b][c] = w(a, b, c - 1) + w(a, b - 1, c - 1) - w(a, b - 1, c);
        }
        
        // 일반적인 경우
        return dp[a][b][c] = w(a - 1, b, c) + w(a - 1, b - 1, c) + w(a - 1, b, c - 1) - w(a - 1, b - 1, c - 1);
    }
    
    // a, b, c가 모두 0~20 사이인지 확인
    static boolean inRange(int a, int b, int c) {
        return 0 <= a && a <= 20 && 0 <= b && b <= 20 && 0 <= c && c <= 20; 
    }
}
